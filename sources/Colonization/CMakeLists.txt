set (SCAFFOLD_UNWRAPPER_AS_BIND_GEN_COMMAND "ASBindGenCommand=ASBindGen")
file (GLOB_RECURSE SCAFFOLDS "*.scaffold")

foreach (SCAFFOLD ${SCAFFOLDS})
    file (RELATIVE_PATH SCAFFOLD_REL ${CMAKE_SOURCE_DIR} ${SCAFFOLD})
    get_filename_component (DIR ${SCAFFOLD_REL} DIRECTORY)
    get_filename_component (NAME ${SCAFFOLD} NAME_WE)

    set (OUTPUT_HPP "${CMAKE_SOURCE_DIR}/${DIR}/${NAME}.hpp")
    set (OUTPUT_CPP "${CMAKE_SOURCE_DIR}/${DIR}/${NAME}.cpp")
    file (WRITE ${OUTPUT_HPP} "// This file will be autogenerated while pre-build step.\n")
    file (WRITE ${OUTPUT_CPP} "// This file will be autogenerated while pre-build step.\n")
endforeach ()

configure_file (${CMAKE_CURRENT_SOURCE_DIR}/BuildConfiguration.hpp.cmake ${CMAKE_CURRENT_SOURCE_DIR}/BuildConfiguration.hpp)
set (TARGET_NAME Colonization)
define_source_files (RECURSE GLOB_H_PATTERNS "*.hpp" EXCLUDE_PATTERNS "AngelScriptBindings/[^;]+;")
define_dependency_libs (Urho3D)
setup_library (STATIC)

set (COLONIZATION_HEADERS_LIST )
set (IS_FIRST_ITEM 1)
foreach (HEADER ${H_FILES})
    if (NOT IS_FIRST_ITEM)
        set (START ",\n    ")
    else ()
        set (IS_FIRST_ITEM 0)
        set (START "    ")
    endif ()
    set (COLONIZATION_HEADERS_LIST "${COLONIZATION_HEADERS_LIST}${START}\"${HEADER}\"")
endforeach ()
configure_file (${CMAKE_SOURCE_DIR}/ASBindGenConfiguration.lua.cmake ${CMAKE_SOURCE_DIR}/ASBindGenConfiguration.lua)

add_custom_target (ColonizationASBindGen
                    COMMAND ${LUA} ${AS_BIND_GEN_SCRIPT} "ASBindGenConfiguration.lua" "${CMAKE_BINARY_DIR}/ASBindGen.log"
                    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                    COMMENT "Generating Angel Script bindings for Colonization via ASBindGen..."
                    VERBATIM)
add_dependencies (Colonization ColonizationASBindGen)

file (MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/UnwrapperLogs/)
foreach (SCAFFOLD ${SCAFFOLDS})
    file (RELATIVE_PATH SCAFFOLD_REL ${CMAKE_SOURCE_DIR} ${SCAFFOLD})
    get_filename_component (DIR ${SCAFFOLD_REL} DIRECTORY)
    get_filename_component (NAME ${SCAFFOLD} NAME_WE)

    set (OUTPUT_HPP "${DIR}/${NAME}.hpp")
    set (OUTPUT_CPP "${DIR}/${NAME}.cpp")
    set (OUTPUT_LOG "${CMAKE_BINARY_DIR}/UnwrapperLogs/${NAME}.log")
    add_custom_target ("Unwrap${NAME}"
                        COMMAND ${LUA} ${SCAFFOLD_UNWRAPPER_SCRIPT} ${SCAFFOLD_REL} ${OUTPUT_HPP} ${OUTPUT_CPP} ${SCAFFOLD_UNWRAPPER_AS_BIND_GEN_COMMAND} ${OUTPUT_LOG}
                        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                        COMMENT "Unwrapping ${NAME}..."
                        VERBATIM)
    add_dependencies (Colonization "Unwrap${NAME}")
    add_dependencies (ColonizationASBindGen "Unwrap${NAME}")
endforeach ()
